{"ast":null,"code":"import _slicedToArray from\"/home/nandu/Desktop/todos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";var DisplayTodo=function DisplayTodo(props){var lineStyle={textDecoration:\"line-through\"};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setCheck=_useState2[1];console.log(checked);return props.todos.map(function(todo,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",onChange:function onChange(){return setCheck(!checked);}}),/*#__PURE__*/React.createElement(\"span\",{style:checked?lineStyle:null},todo),/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:function onClick(){props.deleteTodo(index);}},\"x\"));});};export default DisplayTodo;","map":{"version":3,"sources":["/home/nandu/Desktop/todos/src/components/displayTodo.js"],"names":["React","useState","DisplayTodo","props","lineStyle","textDecoration","checked","setCheck","console","log","todos","map","todo","index","deleteTodo"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,SAAS,CAAG,CAChBC,cAAc,CAAE,cADA,CAAlB,CAD6B,cAIDJ,QAAQ,CAAC,KAAD,CAJP,wCAItBK,OAJsB,eAIbC,QAJa,eAK7BC,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACA,MAAOH,CAAAA,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,CAAOC,KAAP,qBACrB,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,WAA3B,eACE,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,0BAAMN,CAAAA,QAAQ,CAAC,CAACD,OAAF,CAAd,EAAjC,EADF,cAEE,4BAAM,KAAK,CAAEA,OAAO,CAAGF,SAAH,CAAe,IAAnC,EAA0CQ,IAA1C,CAFF,cAGE,8BACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,kBAAM,CACbT,KAAK,CAACW,UAAN,CAAiBD,KAAjB,EACD,CAJH,MAHF,CADqB,EAAhB,CAAP,CAcD,CApBD,CAqBA,cAAeX,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst DisplayTodo = (props) => {\n  const lineStyle = {\n    textDecoration: \"line-through\",\n  };\n  const [checked, setCheck] = useState(false);\n  console.log(checked);\n  return props.todos.map((todo, index) => (\n    <div key={index} className=\"container\">\n      <input type=\"checkbox\" onChange={() => setCheck(!checked)} />\n      <span style={checked ? lineStyle : null}>{todo}</span>\n      <button\n        className=\"button\"\n        onClick={() => {\n          props.deleteTodo(index);\n        }}\n      >\n        x\n      </button>\n    </div>\n  ));\n};\nexport default DisplayTodo;\n"]},"metadata":{},"sourceType":"module"}